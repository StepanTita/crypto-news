version: "3.9"
services:
  migrator:
    image: stepancons/crypto-news-migrator:prod
    container_name: migrator-prod
    networks:
      - prod
    volumes:
      - type: bind
        source: ./config.docker.prod.yaml
        target: /config.yaml
    environment:
      CONFIG: /config.yaml
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "migrator migrate up"
  #  parser:
  #    image: stepancons/crypto-news-parser:prod
  #    container_name: parser-prod
  #    networks:
  #      - prod
  #    volumes:
  #      - type: bind
  #        source: ./config.docker.prod.yaml
  #        target: /config.yaml
  #    environment:
  #      CONFIG: /config.yaml
  #    depends_on:
  #      - migrator
  #    restart: always
  #    entrypoint: /bin/sh
  #    command: -c "parser run"
  gpt:
    image: stepancons/crypto-news-gpt:prod
    container_name: gpt-prod
    networks:
      - prod
    volumes:
      - type: bind
        source: ./config.docker.prod.yaml
        target: /config.yaml
    environment:
      CONFIG: /config.yaml
    depends_on:
      - migrator
    restart: always
    entrypoint: /bin/sh
    command: -c "gpt run"
  telegram-bot:
    image: stepancons/crypto-news-telegram-bot:prod
    container_name: telegram-bot-prod
    networks:
      - prod
    volumes:
      - type: bind
        source: ./config.docker.prod.yaml
        target: /config.yaml
    environment:
      CONFIG: /config.yaml
    depends_on:
      - migrator
    restart: always
    entrypoint: /bin/sh
    command: -c "telegram-bot run"
  #  twitter-bot:
  #    image: stepancons/crypto-news-twitter-bot:latest
  #    container_name: twitter-bot-prod
  #    networks:
  #      - prod
  #    volumes:
  #      - type: bind
  #        source: ./config.docker.prod.yaml
  #        target: /config.yaml
  #    ports:
  #      - "8080:8080"
  #    environment:
  #      CONFIG: /config.yaml
  #    depends_on:
  #      - migrator
  #    restart: always
  #    entrypoint: /bin/sh
  #    command: -c "twitter-bot run"
  redis_db:
    image: redis:7-alpine
    container_name: redis_db-prod
    networks:
      - prod
    hostname: redis_db
    restart: always
    command: redis-server --save 20 1 --loglevel warning # --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
volumes:
  db:
    driver: local
  cache:
    driver: local

networks:
  prod:
    name: crypto_news_prod